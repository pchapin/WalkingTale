/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.talkingwhale"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 12
        versionName "12.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        signingConfig signingConfigs.config
    }
    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "android.arch.lifecycle:runtime:$arch_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.google.android.gms:play-services-location:$gms_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:preference-v7:27.1.1'

    // Extensions = ViewModel + LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    // Room
    implementation "android.arch.persistence.room:runtime:1.0.0"
    kapt "android.arch.persistence.room:compiler:1.0.0"

    //Image Compressor
    implementation 'id.zelory:compressor:2.1.0'

    // Javascript Web Token
    implementation "com.auth0.android:jwtdecode:1.1.1"

    // Google maps
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation "com.google.android.gms:play-services-maps:$gms_version"

    // Wave view
    implementation 'com.narayanacharya:WaveView:0.9.2'

    // Amazon Web Services
    implementation "com.amazonaws:aws-android-sdk-core:$aws_version"
    implementation 'com.amazonaws:aws-android-sdk-auth-core:2.6.18'
    implementation 'com.amazonaws:aws-android-sdk-auth-userpools:2.6.18'
    implementation "com.amazonaws:aws-android-sdk-cognitoidentityprovider:$aws_version"
    implementation "com.amazonaws:aws-android-sdk-pinpoint:$aws_version"
    implementation "com.amazonaws:aws-android-sdk-s3:$aws_version"
    implementation("com.amazonaws:aws-android-sdk-mobile-client:$aws_version") { transitive = true }
    implementation 'com.amazonaws:aws-android-sdk-ddb-mapper:2.6.15'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Google Firebase
    implementation 'com.google.firebase:firebase-perf:15.0.0'
    implementation "com.google.firebase:firebase-crash:$gms_version"
    implementation "com.google.firebase:firebase-core:$gms_version"
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
        transitive = true
    }
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
}
apply plugin: 'com.google.gms.google-services'
